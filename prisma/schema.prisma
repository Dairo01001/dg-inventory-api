generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ProductStatus {
  id     Int     @id @default(autoincrement())
  name   String  @unique @db.VarChar(50)
  status Boolean @default(true)

  products Product[]
}

model Category {
  id     Int     @id @default(autoincrement())
  name   String  @unique @db.VarChar(50)
  status Boolean @default(true)

  subcategories Subcategory[]
}

model Subcategory {
  id     Int     @id @default(autoincrement())
  name   String  @unique @db.VarChar(50)
  status Boolean @default(true)

  parent               Category               @relation(fields: [parentId], references: [id])
  parentId             Int
  subcategoryOnProduct SubcategoryOnProduct[]
}

model SubcategoryOnProduct {
  assignedAt DateTime @default(now())

  product       Product     @relation(fields: [productId], references: [id])
  productId     String
  subcategory   Subcategory @relation(fields: [subcategoryId], references: [id])
  subcategoryId Int

  @@id([productId, subcategoryId])
}

model Unit {
  id     Int     @id @default(autoincrement())
  name   String  @unique @db.VarChar(50)
  status Boolean @default(true)

  products Product[]
}

model Product {
  id          String  @id @default(uuid())
  name        String  @db.VarChar(255)
  code        String  @db.VarChar(50)
  price       Decimal @db.Decimal(10, 2)
  stock       Int     @default(0)
  description String? @db.Text
  image       String? @db.VarChar(255)
  amount      Decimal @db.Decimal(10, 2)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  status               ProductStatus          @relation(fields: [statusId], references: [id])
  statusId             Int
  unit                 Unit                   @relation(fields: [unitId], references: [id])
  unitId               Int
  subcategoryOnProduct SubcategoryOnProduct[]
  incomeDetails        IncomeDetail[]
  saleDetails          SaleDetail[]
}

model Role {
  id        Int     @id @default(autoincrement())
  name      String  @unique @db.VarChar(50)
  status    Boolean @default(true)
  updatedBy String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[]
}

model Document {
  id     Int     @id @default(autoincrement())
  name   String  @unique @db.VarChar(50)
  status Boolean @default(true)

  users   User[]
  persons Person[]
}

model Address {
  id         Int    @id @default(autoincrement())
  city       String @db.VarChar(50)
  street     String @db.VarChar(50)
  number     String @db.VarChar(50)
  complement String @db.VarChar(255)

  user   User?
  person Person?
}

model User {
  id       String @id @default(uuid())
  name     String @db.VarChar(255)
  phone    String @db.VarChar(20)
  email    String @unique @db.VarChar(255)
  password String @db.VarChar(255)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  role       Role     @relation(fields: [roleId], references: [id])
  roleId     Int
  address    Address? @relation(fields: [addressId], references: [id])
  addressId  Int?     @unique
  document   Document @relation(fields: [documentId], references: [id])
  documentId Int
  incomes    Income[]
  sales      Sale[]
}

model PersonType {
  id     Int     @id @default(autoincrement())
  name   String  @unique @db.VarChar(50)
  status Boolean @default(true)

  persons Person[]
}

model Person {
  id             String @id @default(uuid())
  name           String @db.VarChar(255)
  phone          String @db.VarChar(20)
  email          String @unique @db.VarChar(255)
  numberDocument String @unique @db.VarChar(50)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  type       PersonType @relation(fields: [typeId], references: [id])
  typeId     Int
  document   Document   @relation(fields: [documentId], references: [id])
  documentId Int
  address    Address?   @relation(fields: [addressId], references: [id])
  addressId  Int?       @unique
  incomes    Income[]
  sales      Sale[]
}

model ReceiptType {
  id     Int     @id @default(autoincrement())
  name   String  @unique @db.VarChar(50)
  status Boolean @default(true)

  incomes Income[]
  Sale    Sale[]
}

model IncomeStatus {
  id     Int     @id @default(autoincrement())
  name   String  @unique @db.VarChar(50)
  status Boolean @default(true)

  incomes Income[]
}

model IncomeDetail {
  id     Int @id @default(autoincrement())
  amount Int
  tax    Int @default(0)
  price  Int

  income    Income  @relation(fields: [incomeId], references: [id])
  incomeId  Int
  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model Income {
  id            Int      @id @default(autoincrement())
  seriesReceipt String   @unique @db.VarChar(50)
  numberReceipt String   @unique @db.VarChar(50)
  tax           Decimal  @db.Decimal(4, 2)
  total         Decimal  @db.Decimal(10, 2)
  date          DateTime

  distributor   Person         @relation(fields: [distributorId], references: [id])
  distributorId String
  user          User           @relation(fields: [userId], references: [id])
  userId        String
  receiptType   ReceiptType    @relation(fields: [receiptTypeId], references: [id])
  receiptTypeId Int
  status        IncomeStatus   @relation(fields: [statusId], references: [id])
  statusId      Int
  incomeDetails IncomeDetail[]
}

model SaleStatus {
  id     Int     @id @default(autoincrement())
  name   String  @unique @db.VarChar(50)
  status Boolean @default(true)

  sales Sale[]
}

model SaleDetail {
  id       Int @id @default(autoincrement())
  amount   Int
  tax      Int @default(0)
  discount Int @default(0)
  price    Int

  sale      Sale    @relation(fields: [saleId], references: [id])
  saleId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId String
}

model Sale {
  id            Int      @id @default(autoincrement())
  seriesReceipt String   @unique @db.VarChar(50)
  numberReceipt String   @unique @db.VarChar(50)
  tax           Decimal  @db.Decimal(4, 2)
  total         Decimal  @db.Decimal(10, 2)
  date          DateTime

  client        Person       @relation(fields: [clientId], references: [id])
  clientId      String
  user          User         @relation(fields: [userId], references: [id])
  userId        String
  receiptType   ReceiptType  @relation(fields: [receiptTypeId], references: [id])
  receiptTypeId Int
  status        SaleStatus   @relation(fields: [statusId], references: [id])
  statusId      Int
  saleDetails   SaleDetail[]
}
